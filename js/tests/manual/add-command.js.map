{"version":3,"sources":["tests/ts/tests/manual/add-command.ts"],"names":["AddCommand","[object Object]","params","context","result","operand","exports"],"mappings":"4YAiBA,MAAaA,WAELC,UAEN,MAAO,MAIKA,QACZC,EACAC,oDAEA,IAAIC,EAAiB,EAErB,IAAK,IAAIC,KAAWH,EAAQE,GAAUC,EAEtC,OAAOD,MAhBTE,QAAAN,WAAAA","file":"add-command.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t3:59 PM -- October 21st, 2019.\n *\tProject: @command-socket/core\n */\n\nimport { Command } from \"../../command/command\";\nimport { CommandStructure } from \"../../schema/command-structure\";\nimport { CommandSocket } from \"../../command-socket/command-socket\";\n\n/**\n * A command that adds two numbers together.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class AddCommand implements Command<AddCommandStructure, \"add\"> {\n\t\n\tpublic getName(): \"add\" {\n\t\t\n\t\treturn \"add\";\n\t\t\n\t}\n\t\n\tpublic async execute(\n\t\tparams: AddCommandStructure[\"params\"],\n\t\tcontext: CommandSocket): Promise<AddCommandStructure[\"return\"]> {\n\t\t\n\t\tlet result: number = 0;\n\t\t\n\t\tfor (let operand of params) result += operand;\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n}\n\nexport interface AddCommandStructure extends CommandStructure {\n\t\n\tparams: number[];\n\t\n\treturn: number;\n\t\n}"]}