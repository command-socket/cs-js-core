{"version":3,"sources":["tests/manual/ts/tests/manual/types/add-command.ts"],"names":["AddCommand","[object Object]","params","context","result","operand","exports"],"mappings":"4YAsBA,MAAaA,WAELC,UAEN,MAAO,MAIKA,QACZC,EACAC,oDAEA,IAAIC,EAAiB,EAErB,IAAK,IAAIC,KAAWH,EAAQE,GAAUC,EAEtC,OAAOD,MAhBTE,QAAAN,WAAAA","file":"add-command.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t3:59 PM -- October 21st, 2019.\n *\tProject: @command-socket/core\n */\n\nimport { FormalCommand } from \"../../../schema/command/formal-command\";\nimport {\n\tCommandStructure,\n\tCommandStructureParameterType,\n\tCommandStructureReturnType\n} from \"../../../schema/command/command-structure\";\nimport { CommandSocket } from \"../../../command-socket/command-socket\";\nimport { TestCommandSet } from \"./test-command-set\";\n\n/**\n * A command that adds two numbers together.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class AddCommand implements FormalCommand<AddCommandStructure> {\n\t\n\tpublic getName(): \"sum\" {\n\t\t\n\t\treturn \"sum\";\n\t\t\n\t}\n\t\n\tpublic async execute(\n\t\tparams: CommandStructureParameterType<TestCommandSet[\"sum\"]>,\n\t\tcontext: CommandSocket): Promise<CommandStructureReturnType<TestCommandSet[\"sum\"]>> {\n\t\t\n\t\tlet result: number = 0;\n\t\t\n\t\tfor (let operand of params) result += operand;\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n}\n\nexport interface AddCommandStructure extends CommandStructure {\n\t\n\treadonly parameter: number[];\n\t\n\treadonly return: number;\n\t\n\treadonly name: \"sum\";\n\t\n}"]}