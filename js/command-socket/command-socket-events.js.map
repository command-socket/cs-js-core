{"version":3,"sources":["ts/command-socket/command-socket-events.ts"],"names":["avents_1","require","CommandSocketEvents","[object Object]","this","OPEN","AventNotifier","OUTGOING_REQUEST","INCOMING_RESPONSE","INCOMING_REQUEST","OUTGOING_RESPONSE","REQUEST_FULFILLED","CLOSE","exports"],"mappings":"oEAMA,MAAAA,SAAAC,QAAA,UAIA,MAAaC,oBA6DZC,cAECC,KAAKC,KAAO,IAAIL,SAAAM,cAChBF,KAAKG,iBAAmB,IAAIP,SAAAM,cAC5BF,KAAKI,kBAAoB,IAAIR,SAAAM,cAC7BF,KAAKK,iBAAmB,IAAIT,SAAAM,cAC5BF,KAAKM,kBAAoB,IAAIV,SAAAM,cAC7BF,KAAKO,kBAAoB,IAAIX,SAAAM,cAC7BF,KAAKQ,MAAQ,IAAIZ,SAAAM,eArEnBO,QAAAX,oBAAAA","file":"command-socket-events.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t10:26 AM -- November 26th, 2019.\n *\tProject: CommandSocket - Core\n */\n\nimport { AventNotifier } from \"avents\";\nimport { CommandSocketRequestMessage, CommandSocketResponseMessage } from \"../schema/message/command-socket-message\";\nimport { CommandSocket } from \"./command-socket\";\n\nexport class CommandSocketEvents {\n\t\n\t/**\n\t * An event fired when the related CommandSocket initially opens.\n\t */\n\tpublic readonly OPEN: AventNotifier<{\n\t\tsource: CommandSocket\n\t}>;\n\t\n\t/**\n\t * An event fired when the related CommandSocket places a request to some other CommandSocket.\n\t */\n\tpublic readonly OUTGOING_REQUEST: AventNotifier<{\n\t\tsource: CommandSocket,\n\t\trequest: CommandSocketRequestMessage\n\t}>;\n\t\n\t/**\n\t * An event fired when the related CommandSocket receives a response to a placed/outgoing request.\n\t */\n\tpublic readonly INCOMING_RESPONSE: AventNotifier<{\n\t\tsource: CommandSocket,\n\t\trequest: CommandSocketRequestMessage,\n\t\tresponse: CommandSocketResponseMessage\n\t}>;\n\t\n\t/**\n\t * An event fired when the related CommandSocket receives an incoming request from some other CommandSocket.\n\t */\n\tpublic readonly INCOMING_REQUEST: AventNotifier<{\n\t\tsource: CommandSocket,\n\t\trequest: CommandSocketRequestMessage\n\t}>;\n\t\n\t/**\n\t * An event fired when the related CommandSocket responds to some received request.\n\t */\n\tpublic readonly OUTGOING_RESPONSE: AventNotifier<{\n\t\tsource: CommandSocket,\n\t\trequest: CommandSocketRequestMessage\n\t\tresponse: CommandSocketResponseMessage\n\t}>;\n\t\n\tpublic readonly REQUEST_FULFILLED: AventNotifier<{\n\t\tsource: CommandSocket,\n\t\trequest: CommandSocketRequestMessage\n\t\tresponse: CommandSocketResponseMessage\n\t}>;\n\t\n\t/**\n\t * An event fired when the related CommandSocket closes.\n\t */\n\tpublic readonly CLOSE: AventNotifier<{\n\t\tsource: CommandSocket,\n\t\tcode: number,\n\t\treason: string\n\t}>;\n\t\n\t/**\n\t * Initializes a new CommandSocketEvent object, readying the object's various {@link AventNotifier}s.\n\t */\n\tpublic constructor() {\n\t\t\n\t\tthis.OPEN = new AventNotifier();\n\t\tthis.OUTGOING_REQUEST = new AventNotifier();\n\t\tthis.INCOMING_RESPONSE = new AventNotifier();\n\t\tthis.INCOMING_REQUEST = new AventNotifier();\n\t\tthis.OUTGOING_RESPONSE = new AventNotifier();\n\t\tthis.REQUEST_FULFILLED = new AventNotifier();\n\t\tthis.CLOSE = new AventNotifier();\n\t\t\n\t}\n\t\n}"]}