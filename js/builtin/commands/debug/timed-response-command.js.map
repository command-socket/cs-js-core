{"version":3,"sources":["builtin/commands/ts/builtin/commands/debug/timed-response-command.ts"],"names":["TimedResponseCommand","[object Object]","params","context","Promise","resolve","setTimeout","exports"],"mappings":"4YAqBA,MAAaA,qBAECC,QAAQC,EACfC,oDAEL,OAAO,IAAIC,QACTC,IAEDC,WAAW,IAAMD,EAAQ,UAAYH,EAAS,qBAAsBA,SARvEK,QAAAP,qBAAAA","file":"timed-response-command.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t12:51 AM -- November 27th, 2019.\n *\tProject: CommandSocket - Core\n */\n\nimport { FormalCommand, FormalCommandResolveType } from \"../../../schema/command/formal-command\";\nimport {\n\tCommandStructure,\n\tCommandStructureParameterType,\n\tCommandStructureReturnType\n} from \"../../../schema/command/command-structure\";\nimport { CommandSocket } from \"../../../command-socket/command-socket\";\n\n/**\n *\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class TimedResponseCommand implements FormalCommand<TimedResponseCommandStructure> {\n\t\n\tpublic async execute(params: CommandStructureParameterType<TimedResponseCommandStructure>,\n\t\t\t\t\t\t context: CommandSocket): Promise<CommandStructureReturnType<TimedResponseCommandStructure>> {\n\t\t\n\t\treturn new Promise<CommandStructureReturnType<TimedResponseCommandStructure>>(\n\t\t\t(resolve: (value?: FormalCommandResolveType<TimedResponseCommandStructure>) => void): void => {\n\t\t\t\n\t\t\tsetTimeout(() => resolve(\"Waited \" + params + \"ms and responded.\"), params);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n}\n\nexport interface TimedResponseCommandStructure\n\textends CommandStructure<number, string> { }"]}