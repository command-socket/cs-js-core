{"version":3,"sources":["builtin/commands/ts/builtin/commands/debug/timed-response-command.ts"],"names":["TimedResponseCommand","[object Object]","params","context","Promise","resolve","setTimeout","exports"],"mappings":"4YAiBA,MAAaA,qBAELC,UAEN,MAAO,qCAIKA,QAAQC,EACfC,oDAEL,OAAO,IAAIC,QACTC,IAEDC,WAAW,IAAMD,EAAQ,UAAYH,EAAS,qBAAsBA,SAdvEK,QAAAP,qBAAAA","file":"timed-response-command.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t12:51 AM -- November 27th, 2019.\n *\tProject: CommandSocket - Core\n */\n\nimport { Command } from \"../../../command/command\";\nimport { CommandStructure } from \"../../../schema/command-structure\";\nimport { CommandSocket } from \"../../../command-socket/command-socket\";\n\n/**\n *\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class TimedResponseCommand implements Command<TimedResponseCommandStructure> {\n\t\n\tpublic getName(): \"commandsocket debug timed-response\" {\n\t\t\n\t\treturn \"commandsocket debug timed-response\";\n\t\t\n\t}\n\t\n\tpublic async execute(params: TimedResponseCommandStructure[\"parameter\"],\n\t\t\t\t\t\t context: CommandSocket): Promise<TimedResponseCommandStructure[\"return\"]> {\n\t\t\n\t\treturn new Promise<TimedResponseCommandStructure[\"return\"]>(\n\t\t\t(resolve: (value?: (PromiseLike<TimedResponseCommandStructure[\"return\"]> | TimedResponseCommandStructure[\"return\"])) => void): void => {\n\t\t\t\n\t\t\tsetTimeout(() => resolve(\"Waited \" + params + \"ms and responded.\"), params);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n}\n\nexport interface TimedResponseCommandStructure\n\textends CommandStructure<number, string, \"commandsocket debug timed-response\"> { }"]}