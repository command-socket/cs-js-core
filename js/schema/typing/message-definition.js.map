{"version":3,"sources":["schema/ts/schema/typing/message-definition.ts"],"names":["typit_1","require","MessageDefinition","[object Object]","parametersType","SpecialType","ANY","returnType","this","command","StandardType","STRING","meta","correspondenceID","didError","BOOLEAN","mode","EnumType","request","exports","CommandSocketIdentityDefinition","response","OrType","NULL","ObjectType","timeline","requestSent","NUMBER","requestReceived","responseSent","responseReceived","parameters","return","id","ip"],"mappings":"oEAMA,MAAAA,QAAAC,QAAA,SAiBA,MAAaC,kBAEZC,YAAmBC,EAAuBJ,QAAAK,YAAYC,IAAKC,EAAmBP,QAAAK,YAAYC,KAO1EE,KAAAC,QAAgBT,QAAAU,aAAaC,OAE7BH,KAAAI,KAA6B,CAE5CC,iBAAkBb,QAAAU,aAAaC,OAE/BG,SAAUd,QAAAU,aAAaK,QAEvBC,KAAM,IAAIhB,QAAAiB,SAAS,CAAC,UAAW,aAE/BC,QAASC,QAAAC,gCAETC,SAAU,IAAIrB,QAAAsB,OAAOtB,QAAAK,YAAYkB,KAAM,IAAIvB,QAAAwB,WAAWL,QAAAC,kCAEtDK,SAAU,CAETC,YAAa1B,QAAAU,aAAaiB,OAE1BC,gBAAiB,IAAI5B,QAAAsB,OAAOtB,QAAAK,YAAYkB,KAAMvB,QAAAU,aAAaiB,QAE3DE,aAAc,IAAI7B,QAAAsB,OAAOtB,QAAAK,YAAYkB,KAAMvB,QAAAU,aAAaiB,QAExDG,iBAAkB,IAAI9B,QAAAsB,OAAOtB,QAAAK,YAAYkB,KAAMvB,QAAAU,aAAaiB,UA3B7DnB,KAAKuB,WAAa3B,EAClBI,KAAKwB,OAASzB,GALhBY,QAAAjB,kBAAAA,kBA6CaiB,QAAAC,gCAAwD,CAEpEa,GAAIjC,QAAAU,aAAaC,OAEjBuB,GAAIlC,QAAAU,aAAaC","file":"message-definition.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t1:15 PM -- October 22nd, 2019.\n *\tProject: @command-socket/core\n */\n\nimport {\n\tObjectTypeDefinition,\n\tType,\n\tSpecialType,\n\tStandardType,\n\tEnumType,\n\tOrType,\n\tObjectType\n} from \"typit\";\n\n/**\n * A typit {@link ObjectTypeDefinition} for checking the structure of incoming {@link CommandSocketMessage}s.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class MessageDefinition implements ObjectTypeDefinition {\n\t\n\tpublic constructor(parametersType: Type = SpecialType.ANY, returnType: Type = SpecialType.ANY) {\n\t\t\n\t\tthis.parameters = parametersType;\n\t\tthis.return = returnType;\n\t\t\n\t}\n\t\n\tpublic readonly command: Type = StandardType.STRING;\n\t\n\tpublic readonly meta: ObjectTypeDefinition = {\n\t\t\n\t\tcorrespondenceID: StandardType.STRING,\n\t\t\n\t\tdidError: StandardType.BOOLEAN,\n\t\t\n\t\tmode: new EnumType([\"request\", \"response\"]),\n\t\t\n\t\trequest: CommandSocketIdentityDefinition,\n\t\t\n\t\tresponse: new OrType(SpecialType.NULL, new ObjectType(CommandSocketIdentityDefinition)),\n\t\t\n\t\ttimeline: {\n\t\t\t\n\t\t\trequestSent: StandardType.NUMBER,\n\t\t\t\n\t\t\trequestReceived: new OrType(SpecialType.NULL, StandardType.NUMBER),\n\t\t\t\n\t\t\tresponseSent: new OrType(SpecialType.NULL, StandardType.NUMBER),\n\t\t\t\n\t\t\tresponseReceived: new OrType(SpecialType.NULL, StandardType.NUMBER)\n\t\t\t\n\t\t}\n\t\t\n\t};\n\t\n\tpublic readonly parameters: Type;\n\t\n\tpublic readonly return: Type;\n\t\n\t[property: string]: Type | ObjectTypeDefinition;\n\t\n}\n\nexport const CommandSocketIdentityDefinition: ObjectTypeDefinition = {\n\t\n\tid: StandardType.STRING,\n\t\n\tip: StandardType.STRING\n\t\n};"]}